{"frames":[{"func":"fev_Inputs %>% read_csv(here(\"Inputs/fev.csv\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"read_csv(., here(\"Inputs/fev.csv\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vroom::vroom(file, delim = \",\", col_names = col_names, col_types = col_types, \n    col_select = {\n        {\n            col_select ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"standardise_path(file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cli::cli_abort(c(\"{.arg {arg}} is not one of the supported inputs:\", \n    `*` = \"A filepath or character vector of filepaths\", `*` = \"A connection or list of connections\", \n    `*` = \"Literal or raw input\"), call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rlang::abort(message, ..., call = call, use_cli_format = TRUE, \n    .frame = .frame)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in vroom::vroom(file, delim = \",\", col_names = col_names, col_types = col_types,  : \n  \u001B[38;5;255m\n\u001B[36m•\u001B[38;5;255m A filepath or character vector of filepaths\n\u001B[36m•\u001B[38;5;255m A connection or list of connections\n\u001B[36m•\u001B[38;5;255m Literal or raw input\u001B[39m\n"}